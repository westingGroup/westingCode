<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:configurator="http://cocoon.apache.org/schema/configurator"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://cocoon.apache.org/schema/configurator http://cocoon.apache.org/schema/configurator/cocoon-configurator-1.0.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<mvc:annotation-driven />
	<context:annotation-config />
	<context:component-scan base-package="com" />
	<!-- <import resource="applicationContext-services.xml" /> -->
	<!-- <import resource="applicationContext-jobs.xml" /> -->

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName">
			<value>org.gjt.mm.mysql.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://127.0.0.1:3306/westing_comm?useUnicode=true&amp;characterEncoding=UTF-8</value>
		</property>
		<property name="username">
			<value>root</value>
		</property>
		<property name="password">
			<value>root</value>
		</property>
		<property name="maxActive" value="20" />
		<property name="maxIdle" value="10" />
		<property name="defaultAutoCommit" value="false" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 设置Spring取那个包中查找相应的实体类 -->
		<property name="packagesToScan">
			<value>com.*</value>
		</property>
		<property name="hibernateProperties">
			<props>
 				<prop key="hibernate.hbm2ddl.auto">update</prop> 
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
			</props>
		</property>
	</bean>
	
	<!-- redis连接池  -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="300" />
        <property name="maxIdle" value="50" />
        <property name="minIdle" value="50" />
        <property name="blockWhenExhausted" value="true" />
        <property name="maxWaitMillis" value="3000" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="false" />
    </bean>

	<!-- 配置Spring的事务处理 -->
	<!-- 创建事务管理器 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 采用@Transcational注解方式使用事务 -->
	<tx:annotation-driven transaction-manager="txManager" />
	<!-- 静态资源过滤 -->
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/fonts/**" location="/fonts/" />
	<mvc:resources mapping="/img/**" location="/img/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/assets/**" location="/assets/" />
	<mvc:resources mapping="/portrait/**" location="/portrait/" />
	<mvc:resources mapping="/topicPicture/**" location="/topicPicture/" />
	<mvc:resources mapping="/wikiPic/**" location="/wikiPic/" />
	<mvc:resources mapping="/ueditor/**" location="/ueditor/" />
	<mvc:resources mapping="/easyui_themes/**" location="/easyui_themes/" />
	<mvc:resources mapping="/bootstrap-datetimepicker/**" location="/bootstrap-datetimepicker/" />
	
	<!-- springMVC 中文乱码 -->
<bean  
    class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
    <property name="messageConverters">  
        <list>  
            <bean  
                class="org.springframework.http.converter.StringHttpMessageConverter">  
                <property name="supportedMediaTypes">  
                    <list>  
                        <bean class="org.springframework.http.MediaType">  
                            <constructor-arg index="0" value="text" />  
                            <constructor-arg index="1" value="plain" />  
                            <constructor-arg index="2" value="UTF-8" />  
                        </bean>  
                    </list>  
                </property>  
            </bean>  
        </list>  
    </property>  
</bean>  

	<!-- 设置multipartResolver才能完成文件上传 设置最大值2M -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="4194304"></property>
	</bean>


	<!-- View Resolvers -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="plist" value="application/x-plist" />
				<entry key="html" value="text/html" />
				<entry key="htm" value="text/html" />
			</map>
		</property>
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<constructor-arg>
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller" />
					</constructor-arg>
				</bean>
			</list>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/WEB-INF/pages/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
		<!-- Change the defaultContentType if you want the default view to be something 
			different from text/plain -->
		<property name="defaultContentType" ref="textPlainMediaType" />
		<property name="ignoreAcceptHeader" value="false" />
	</bean>
	<bean id="textPlainMediaType" class="org.springframework.http.MediaType">
		<constructor-arg value="text" />
		<constructor-arg value="plain" />
	</bean>

		<!-- Activiti begin -->
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="txManager" />
		<property name="databaseSchemaUpdate" value="true" />
		<property name="jobExecutorActivate" value="false" />
		<property name="history" value="full" />
		<property name="processDefinitionCacheLimit" value="10" />

		<!-- 生成流程图的字体 -->
		<property name="activityFontName" value="宋体" />

		<!-- 缓存支持 <property name="processDefinitionCache"> <bean class="me.kafeitu.demo.activiti.util.cache.DistributedCache" 
			/> </property> -->

		<!-- 自动部署 -->
		<property name="deploymentResources">
			<list>
				<value>classpath*:/deployments/*</value>
			</list>
		</property>

		<!-- 自定义表单字段类型 -->
		<!-- <property name="customFormTypes"> <list> <bean class="me.kafeitu.demo.activiti.activiti.form.UsersFormType" 
			/> </list> </property> -->
	</bean>

	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>

	<bean id="repositoryService" factory-bean="processEngine"
		factory-method="getRepositoryService" />
	<bean id="runtimeService" factory-bean="processEngine"
		factory-method="getRuntimeService" />
	<bean id="formService" factory-bean="processEngine"
		factory-method="getFormService" />
	<bean id="identityService" factory-bean="processEngine"
		factory-method="getIdentityService" />
	<bean id="taskService" factory-bean="processEngine"
		factory-method="getTaskService" />
	<bean id="historyService" factory-bean="processEngine"
		factory-method="getHistoryService" />
	<bean id="managementService" factory-bean="processEngine"
		factory-method="getManagementService" />
	<!-- Activiti end -->

    <!-- <import resource="classpath:spring-config-shiro.xml"/>  sss-->
</beans>